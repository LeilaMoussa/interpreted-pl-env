~This is the test program for the lexer

fix num min := -1 .
fix num size := 10.

(num@ n arr) => func lookForMin => (ascii) [
    var num cnt .
    cnt := 0.
    iterif (isGreater(size,cnt))[
        check (isGreater(min,arr#cnt) | isEqual(min,arr#cnt))[
            give 'Y'.
        ]
        other [
            ('Nothing!') => write.
        ]
        cnt := add(cnt,1).
    ]
    give 'N'.
]

() => entry => ()[
    var num#size arr.
    var num i.
    var num previous.
    var num _avg.

    i := 0.
    previous :=0.
    ('Please start filling your array: ') => write.

    iterif (^isGreater(i,size) & isGreater(0,min))[
        arr#i := () => read.
        previous := sub(arr#i,previous).
        i := add(i,1).
    ]

    iterif(^isGreater(i,size))[
        var ascii answer.
        
        check (isGreater(min,previous) | isEqual(min,previous))[
            _avg := div(previous,10).
            check (isGreater(min,_avg))[
                answer := 'y'.
                _avg := mult (min,_avg).
            ]
            other [
                answer := 'n'.
            ]
        ]
        other [
            answer := (arr) => lookForMin.
        ]

        i := add(i,1).
    ]

    
    (answer) => write.
]
