~This is the test program for the lexer

fix num min := -1 .
fix num size := 10.

(num@ n arr) => func lookForMin => (ascii) [
    var num cnt .
    cnt := 0.
    iterif ((> size cnt))[
        check ((> min arr#cnt) | (= min arr#cnt))[
            give 'Y'.
        ]
        other [
            ("Nothing!") => write.
        ]
        cnt := (+ cnt 1).
    ]
    give 'N'.
]

() => entry => ()[
    var num#size arr.
    var num i.
    var num previous.
    var num _avg.

    i := 0.
    previous :=0.
    ("Please start filling your array: ") => write.

    iterif (^(> i size) & (> 0 min))[
        arr#i := () => read.
        previous := sub(arr#i,previous).
        i := (+ i 1).
    ]

    iterif(^(> i size))[
        var ascii answer.
        
        check ((> min previous) | (= min previous))[
            _avg := div(previous,10).
            check ((> min _avg))[
                answer := 'y'.
                _avg :=  (* min _avg).
            ]
            other [
                answer := 'n'.
            ]
        ]
        other [
            answer := (arr) => lookForMin.
        ]

        i := (+ i 1).
    ]
    
    (answer) => write.
]
